#!/usr/bin/env ruby
require_relative './ruphy_prof'
require 'ruphy/libint2'

include RuPHY
mol = Geometry::Molecule.new(<<EOF, 'xyz')
3
H2O
O   0.000000   0.000000   0.117115
H   0.000000   0.754583  -0.468460
H   0.000000  -0.754583  -0.468460
EOF
solver = Theory::RHF::Solver.new(mol,BasisSet::STO3G)
solver.mo.density_matrix = Matrix[*YAML.load(<<YML)]
---
- - 2.106234893059027
  - -0.44585904050646497
  - 8.761631167213283e-16
  - 1.5265461339436362e-15
  - -0.10856256535349301
  - -0.02853348653323194
  - -0.028533486533230797
- - -0.44585904050646497
  - 1.9670134178066763
  - -2.9204276102360276e-15
  - -1.737068713068261e-15
  - 0.6181928922896909
  - -0.03400302660990495
  - -0.03400302660990745
- - 8.761631167213283e-16
  - -2.9204276102360276e-15
  - 1.9999999999999991
  - 1.436439457022225e-15
  - -4.840898792808775e-15
  - 2.0080613186818425e-15
  - 7.61035758943702e-16
- - 1.5265461339436362e-15
  - -1.737068713068261e-15
  - 1.436439457022225e-15
  - 0.7362472348542255
  - -8.635269500840829e-16
  - 0.5399282091027715
  - -0.5399282091027711
- - -0.10856256535349301
  - 0.6181928922896909
  - -4.840898792808775e-15
  - -8.635269500840829e-16
  - 1.2407552330586946
  - -0.4719639244429757
  - -0.4719639244429753
- - -0.02853348653323194
  - -0.03400302660990495
  - 2.0080613186818425e-15
  - 0.5399282091027715
  - -0.4719639244429757
  - 0.60012216546153
  - -0.19179244469696288
- - -0.028533486533230797
  - -0.03400302660990745
  - 7.61035758943702e-16
  - -0.5399282091027711
  - -0.4719639244429753
  - -0.19179244469696288
  - 0.6001221654615287
YML

5.times do
  p d = solver.iterate.abs
  p solver.mo.total_energy
  #break i if d < 1e-5
end
