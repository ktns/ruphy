# -*- ruby -*-

if ENV['TERM'] =~ /screen/
	begin
		require 'autotest/screen'
	rescue LoadError
		$stderr.puts "Could not load 'autotest/screen'"
	end
end

# Adapted with tip from http://ph7spot.com/articles/getting_started_with_autotest
# by DitoCujo (http://ditoinfo.wordpress.com)
# and modified by ktns
#
if system 'type notify-send > /dev/null 2>&1'
	module Autotest::GnomeNotify
		EXPIRATION_IN_SECONDS = 5
		ERROR_ICON = "gtk-dialog-error"
		SUCCESS_ICON = "gtk-dialog-info"
		def self.notify(title, msg, icon)
			options = "-t #{EXPIRATION_IN_SECONDS * 1000} -i #{icon}"
			system "notify-send #{options} '#{title}' '#{msg}'"
		end
		Autotest.add_hook :ran_command do |at|
			results = [at.results].flatten.join("\n")
			output = results.slice(/(\d+)\s+examples?,\s*(\d+)\s+failures?(,\s*(\d+)\s+not implemented)?/)
			if output
				if $~[2].to_i > 0
					notify "FAIL", "#{output}", ERROR_ICON
				else
					notify "Success!", "#{output}", SUCCESS_ICON
				end
			end
		end
	end
end

Autotest.add_hook :initialize do |at|
	at.find_directories=%w<./spec ./lib ./ext>
	at.add_exception(/(_helper\.rb|\.opts)$/)

	at.add_mapping(/ext\/.*\/(.*)\.[ch]/) do |_, m|
		["spec/#{m[1]}_extn_spec.rb"]
	end
end
